<h1 class="title">Level config</h1>
<form id="levelconfig">
  <h2 class="subtitle" style="text-align: left">Level system</h2>
  <div class="control">
    <input id="LS-E" type="radio" name="system" value="true" <% if(data.levelsystem) { %> checked <% } %>>
    <label for="LS-E" class="radio">Enabled</label>
    <input id="LS-D" type="radio" name="system" value="false" <% if(!data.levelsystem) { %> checked <% } %>>
    <label for="LS-D" class="radio">Disabled</label>
  </div>
  <br>
  <h2 class="subtitle" style="text-align: left">Level notifications</h2>
  <div class="control">
    <input id="LN-E" type="radio" name="notif" value="true" <% if(data.levelnotif) { %> checked <% } %>>
    <label for="LN-E" class="radio">Enabled</label>
    <input id="LN-D" type="radio" name="notif" value="false" <% if(!data.levelnotif) { %> checked <% } %>>
    <label for="LN-D" class="radio">Disabled</label>
  </div>
  <br>
  <div>
    <h2 class="subtitle" style="text-align: left">Roles for leveling-up</h2>
    <p style="text-align: left">
      Use <code>g%setlevelroles add [level] [roles]</code> or <code>g%setlevelroles remove [level]</code> for that
      config
    </p>
  </div><br>
  <span id="LS-Span" style="padding: 3px; margin-top: 10px; font-size: 20px; display: none;"></span>
  <br>
  <button type="submit" id="LS-Submit" class="button" style="float: left;">Save</button>
</form>
<script>
  document.getElementById("levelconfig").addEventListener("submit", function (e) {
    const submit = document.getElementById("LS-Submit");
    submit.style.display = "none";
    const toedit = document.getElementById("LS-Span");
    toedit.innerHTML = "Please wait...<br>";
    toedit.style.backgroundColor = "#19c9ff";
    toedit.style.color = "#000";
    toedit.style.display = "block";
    const levelsystem = (this.elements["system"].value == "true") ? true : false;
    const levelnotif = (this.elements["notif"].value == "true") ? true : false;
    fetch("./levels", {
      method: "PUT",
      headers: {
        "CSRF-Token": "<%= csrfToken %>",
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        "system": levelsystem,
        "notif": levelnotif
      })
    }).then(e => {
      if(e.ok) {
        toedit.style.backgroundColor = "#09db02";
        toedit.innerHTML = "Changes successfully saved<br>";
        submit.style.display = "block";
      }
      else {
        e.text().then(r => {
          toedit.style.backgroundColor = "#be0000";
          toedit.style.color = "#FFF";
          toedit.innerHTML = "Something happened: " + r + "<br>";
          submit.style.display = "block";
        })
      }
    }).catch(err => {
      toedit.style.backgroundColor = "#be0000";
      toedit.style.color = "#FFF";
      toedit.innerHTML = "Something happened: " + err.toString() + "<br>";
      submit.style.display = "block";
    });
    e.preventDefault();
  })
</script>